name: build

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, labeled, unlabeled, synchronize ]

env:
  REPO_NAME: flutter-app-playground
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.configureondemand=true -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx4g -Xms128m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=1024m"
  DART_VERSION: 2.16.1
  FLUTTER_VERSION: 2.10.2
  JAVA_VERSION: 11

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Project
        uses: actions/checkout@v3.0.2

      - name: Cache Dependencies
        uses: actions/cache@v3.0.2
        with:
          path: |
            /opt/hostedtoolcache/flutter
            /home/runner/.pub-cache
          key: ${{ runner.os }}-build-${{ env.FLUTTER_VERSION }}
          restore-keys: |
            ${{ runner.os }}-build

      - name: Configure Dart
        uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ env.DART_VERSION }}

      - name: Configure Flutter
        uses: subosito/flutter-action@v2.4.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      - name: Run Analyzer
        run: |
          flutter analyze

  android:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Checkout Project
        uses: actions/checkout@v3.0.2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Cache Dependencies
        uses: actions/cache@v3.0.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
            /opt/hostedtoolcache/flutter
            /home/runner/.pub-cache
          key: ${{ runner.os }}-android-${{ env.FLUTTER_VERSION }}
          restore-keys: |
            ${{ runner.os }}-android

      - name: Configure JDK
        uses: actions/setup-java@v3.3.0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Configure Dart
        uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ env.DART_VERSION }}

      - name: Configure Flutter
        uses: subosito/flutter-action@v2.4.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      - name: Build Android
        run: |
          flutter build apk --release --dart-define RELEASE=true --obfuscate --split-debug-info build/app/outputs/symbols-apk/ --target-platform android-arm64

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.0.0
        if: always()
        with:
          name: ${{ env.REPO_NAME }}-android-${{ github.run_id }}
          path: |
            build/app/outputs/apk/release
            build/app/outputs/bundle/release
            build/app/outputs/symbols-apk
            build/app/outputs/symbols-appbundle
          if-no-files-found: warn

  ios:
    runs-on: macos-latest
    needs:
      - build

    steps:
      - name: Checkout Project
        uses: actions/checkout@v3.0.2

      - name: Cache Dependencies
        uses: actions/cache@v3.0.2
        with:
          path: |
            /Users/runner/hostedtoolcache/flutter
            /Users/runner/.pub-cache
          key: ${{ runner.os }}-ios-${{ env.FLUTTER_VERSION }}
          restore-keys: |
            ${{ runner.os }}-ios

      - name: Configure Dart
        uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ env.DART_VERSION }}

      - name: Configure Flutter
        uses: subosito/flutter-action@v2.4.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      - name: Build iOS
        run: |
          flutter build ios --release --dart-define RELEASE=true --obfuscate --split-debug-info build/ios/outputs/symbols --no-codesign

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.0.0
        if: always()
        with:
          name: ${{ env.REPO_NAME }}-ios-${{ github.run_id }}
          path: |
            build/ios/Release-iphoneos
            build/ios/symbols
          if-no-files-found: warn

  web:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Checkout Project
        uses: actions/checkout@v3.0.2

      - name: Cache Dependencies
        uses: actions/cache@v3.0.2
        with:
          path: |
            /opt/hostedtoolcache/flutter
            /home/runner/.pub-cache
          key: ${{ runner.os }}-build-${{ env.FLUTTER_VERSION }}
          restore-keys: |
            ${{ runner.os }}-web

      - name: Configure Dart
        uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ env.DART_VERSION }}

      - name: Configure Flutter
        uses: subosito/flutter-action@v2.4.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      - name: Build Website
        run: |
          flutter build web --release --dart-define RELEASE=true --web-renderer html --base-href /flutter-app-playground/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.0.0
        if: always()
        with:
          name: ${{ env.REPO_NAME }}-web-${{ github.run_id }}
          path: |
            build/web
          if-no-files-found: warn

  publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - build
      - android
      - ios
      - web

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.REPO_NAME }}-web-${{ github.run_id }}
          path: ./build/web

      - name: Publish Website
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          user_name: "Github Actions"
          user_email: "action@github.com"
